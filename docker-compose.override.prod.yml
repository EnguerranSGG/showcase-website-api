services:
  astro-site:
    build:
      context: /opt/air/front-air/astro-site
      dockerfile: Dockerfile.prod
      args:
        PUBLIC_API_URL: ${PUBLIC_API_URL}
        PUBLIC_ASSET_URL: ${PUBLIC_ASSET_URL}
    container_name: astro-site-prod
    environment:
      - NODE_ENV=production
      - PUBLIC_API_URL=${PUBLIC_API_URL}
      - PUBLIC_ASSET_URL=${PUBLIC_ASSET_URL}
    expose:
      - 4321
    depends_on:
      - api
    networks:
      - backend
    restart: unless-stopped

  admin-dashboard:
    build:
      context: /opt/air/front-air/admin-dashboard
      dockerfile: Dockerfile.prod
      args:
        API_URL: ${API_URL}
    container_name: admin-dashboard-prod
    environment:
      - NODE_ENV=production
      - API_URL=${API_URL}
    expose:
      - 4200
    depends_on:
      - api
    networks:
      - backend
    restart: unless-stopped

  nginx:
    volumes:
      - ./nginx/nginx-ssl.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - /var/www/certbot:/var/www/certbot:ro
    ports:
      - '80:80'
      - '443:443'
    depends_on:
      - api
      - astro-site
      - admin-dashboard
    restart: unless-stopped

  api:
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/api/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U air-admin -d air-db']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    environment:
      POSTGRES_USER: air-admin
      POSTGRES_PASSWORD: air-admin-password
      POSTGRES_DB: air-db
      POSTGRES_INITDB_ARGS: '--encoding=UTF-8 --lc-collate=C --lc-ctype=C'

volumes:
  postgres_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  backend:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
