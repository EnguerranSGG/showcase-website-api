# === Build Stage ===
FROM node:20-slim AS builder

WORKDIR /app

# Installation des d√©pendances syst√®me n√©cessaires
RUN apt-get update \
    && apt-get install -y --no-install-recommends openssl \
    && rm -rf /var/lib/apt/lists/*

# Copie des fichiers de d√©pendances
COPY package*.json ./

# Installation des d√©pendances Node.js
RUN npm ci

# Copie du reste du code
COPY . .

# Build du client Prisma avec les binaryTargets

RUN npx prisma generate

# Build de l'application NestJS
RUN npm run build


# === Production Stage ===
FROM node:20-slim AS runner

WORKDIR /app

# Installer netcat avant de changer d'utilisateur
RUN apt-get update \
    && apt-get install -y --no-install-recommends netcat-openbsd openssl \
    && rm -rf /var/lib/apt/lists/*

# Cr√©er un utilisateur non-root
RUN addgroup --system app && adduser --system --ingroup app appuser

# Copier les fichiers n√©cessaires
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/prisma ./prisma
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./package.json

# Changer les droits de propri√©t√©
RUN chown -R appuser:app /app
USER appuser

ENV PORT=3000

# Attendre que la base de donn√©es soit accessible avant de d√©marrer l'API
CMD sh -c "until nc -z db 5432; do echo 'üïì Waiting for DB...'; sleep 1; done; node dist/main"
